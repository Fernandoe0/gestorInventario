/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.gestorinventario;

import java.io.*;
import java.util.ArrayList;
import javax.swing.*;
/**
 *
 * @author BICHO
 */
public class formMovimientos extends javax.swing.JFrame {
    private MovimientosManager MovimientosManager;
    /**
     * Creates new form formMovimientos
     */
    public formMovimientos() {
        initComponents();
         MovimientosManager = new MovimientosManager();
        llenarComboBoxMovimientos();
    }
private void llenarComboBoxMovimientos() {
        cmbBoxMov.setModel(new DefaultComboBoxModel<>(new String[]{"CARGAR", "DESCARGAR"}));
    }
   
    private void registrarMovimiento() {
         String sku = txtSkuMov.getText();
    String qtyStr = txtQtyMov.getText();
    String movimiento = (String) cmbBoxMov.getSelectedItem();

    try {
        int cantidad = Integer.parseInt(qtyStr);

        // Solo verificar si se está tratando de descargar
        if (movimiento.equals("DESCARGAR")) {
            int cantidadExistente = MovimientosManager.getCantidadPorSku(sku);
            if (cantidadExistente < cantidad) {
                JOptionPane.showMessageDialog(this, "No hay suficiente cantidad para descargar.");
                return;
            }
        }

        // Registrar el movimiento
        MovimientosManager.registrarMovimiento(sku, cantidad, movimiento);
        txtAreaMov.append("SKU: " + sku + ", Cantidad: " + qtyStr + ", Movimiento: " + movimiento + "\n");

        // Limpiar campos
        txtSkuMov.setText("");
        txtQtyMov.setText("");
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Por favor, ingresa una cantidad válida.");
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblMovimientos = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtSkuMov = new javax.swing.JTextField();
        lblSkuMov = new javax.swing.JLabel();
        lblQtyMov = new javax.swing.JLabel();
        cmbBoxMov = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        lblRegistrar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaMov = new javax.swing.JTextArea();
        btnMov = new javax.swing.JButton();
        txtQtyMov = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 153));

        lblMovimientos.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        lblMovimientos.setText("MOVIMIENTOS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(lblMovimientos, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblMovimientos, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 153, 204));

        lblSkuMov.setText("SKU");

        lblQtyMov.setText("QTY");

        cmbBoxMov.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("TIPO MOVIMIENTO");

        lblRegistrar.setText("REGISTRAR");

        txtAreaMov.setColumns(20);
        txtAreaMov.setRows(5);
        jScrollPane1.setViewportView(txtAreaMov);

        btnMov.setText("MOVIMIENTOS");
        btnMov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMovActionPerformed(evt);
            }
        });

        jButton1.setText("SALIR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnMov)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSkuMov, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSkuMov, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(102, 102, 102)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblQtyMov, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtQtyMov, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbBoxMov, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))))
                        .addGap(24, 24, 24))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(48, 48, 48))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSkuMov)
                    .addComponent(lblQtyMov)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSkuMov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbBoxMov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQtyMov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblRegistrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnMov)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMovActionPerformed
        // TODO add your handling code here:
        registrarMovimiento();
    }//GEN-LAST:event_btnMovActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void guardarMovimientoEnArchivo(String sku, int qty, String movimiento) {
        try (BufferedWriter bw = new BufferedWriter(new FileWriter("Movimientos.txt", true))) {
        bw.write(sku + "|" + qty);
        bw.newLine();
    } catch (IOException e) {
        e.printStackTrace();
    }    }
public class MovimientosManager {
    private ArrayList<String[]> movimientos;

    public MovimientosManager() {
        movimientos = new ArrayList<>();
        cargarMovimientos();
    }

     private void cargarMovimientos() {
        try (BufferedReader br = new BufferedReader(new FileReader("Movimientos.txt"))) {
        String linea;
        while ((linea = br.readLine()) != null) {
            String[] datos = linea.split("\\|");
            // Verificar que el arreglo tiene los elementos esperados
            if (datos.length >= 2) { // Al menos SKU y cantidad
                movimientos.add(datos);
            } else {
                System.out.println("Formato incorrecto en la línea: " + linea);
            }
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
    }

    public int getCantidadPorSku(String sku) {
        int cantidad = 0;
        for (String[] movimiento : movimientos) {
            if (movimiento[0].equals(sku)) {
                cantidad += Integer.parseInt(movimiento[1]); // Suponiendo que la cantidad está en la segunda posición
            }
        }
        return cantidad;
    }
     public void registrarMovimiento(String sku, int cantidad, String tipo) {
        // Añadir lógica para manejar CARGAR y DESCARGAR
        // Por ejemplo, sumar o restar la cantidad
        if (tipo.equals("CARGAR")) {
        movimientos.add(new String[]{sku, String.valueOf(cantidad)});
        guardarMovimientoEnArchivo(sku, cantidad, tipo);
    } else if (tipo.equals("DESCARGAR")) {
        int cantidadActual = getCantidadPorSku(sku);
        if (cantidadActual >= cantidad) {
            movimientos.add(new String[]{sku, String.valueOf(-cantidad)});
            guardarMovimientoEnArchivo(sku, -cantidad, tipo);
        } else {
            System.out.println("No hay suficiente cantidad para descargar.");
        }
    }
    guardarMovimientos(); // Asegúrate de que guarda correctamente el movimiento
     }
    private void guardarMovimientos() {
            try (BufferedWriter bw = new BufferedWriter(new FileWriter("Movimientos.txt", true))) {
            for (String[] movimiento : movimientos) {
                bw.write(movimiento[0] + "|" + movimiento[1]);
                bw.newLine();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        }
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
   /* Create and display the form */

        java.awt.EventQueue.invokeLater(() -> new formMovimientos().setVisible(true));
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMov;
    private javax.swing.JComboBox<String> cmbBoxMov;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMovimientos;
    private javax.swing.JLabel lblQtyMov;
    private javax.swing.JLabel lblRegistrar;
    private javax.swing.JLabel lblSkuMov;
    private javax.swing.JTextArea txtAreaMov;
    private javax.swing.JTextField txtQtyMov;
    private javax.swing.JTextField txtSkuMov;
    // End of variables declaration//GEN-END:variables
}
